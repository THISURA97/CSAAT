
plugins {
    id 'java'
    id 'jacoco'
    id 'checkstyle'
    id 'pmd'
    id "com.github.spotbugs" version "4.6.0"
    id 'de.aaschmid.cpd' version '3.1'
    id "org.sonarqube" version "3.0"
}

subprojects {
  apply from: file("$rootProject.projectDir/gradle/heroku/stage.gradle")
  apply plugin: 'org.sonarqube'
}

allprojects {
 ext.baseVersion = "0.1"
  ext.snapshotVersion = true
  group = "org.sonarqube"
  version = "$baseVersion" + (snapshotVersion ? "-SNAPSHOT" : "")
  }

task('root-task').doLast {
        println "I'm $project.name"
    }
     println "This is executed during the $project.name configuration phase."

group = 'com.qualitychecks'
sourceCompatibility = '11'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.hamcrest:hamcrest-core:2.2'


}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
        }
        resources.srcDir 'integrationTest/resources'
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

test {
    useJUnitPlatform()
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    useJUnitPlatform()
    outputs.upToDateWhen { false }
     mustRunAfter test
}
check.dependsOn integrationTest

apply from: 'gradle/checkstyle.gradle'
apply from: 'gradle/jacoco.gradle'
apply from: 'gradle/pmd.gradle'
apply from: 'gradle/spotbugs.gradle'

integrationTest.dependsOn test
jacocoTestCoverageVerification.dependsOn jacocoTestReport
check.dependsOn(cpdCheck, pmdMain, jacocoTestCoverageVerification, integrationTest)

sonarqube {
    properties {
        property "sonar.projectName", "CSAAT"
        property "sonar.projectKey", "THISURA97_CSAAT"
        property "sonar.organization", "thisura97"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sourceEncoding", "UTF-8"

        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "./build/reports/jacocoReport.xml"
        property "sonar.junit.reportsPath", "app/build/test-results/*/TEST-*.xml"

        sonar.modules = sub-project-0,sub-project-1
        sub-project-o.sonar.ProjectName=sub-project-0
        sub-project-o.sonar.ProjectName=sub-project-0
        sub-project-1.sonar.ProjectName=sub-project-1
    }
}